name: Build, Push, and Deploy Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/first-app:1.0

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push # Waits for the build-and-push job to complete

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
          
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
<<<<<<< HEAD

            # Pull the latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/first-app:1.0

            # Stop and remove old container (if exists)
            docker stop first-app || true
            docker rm first-app || true

            # Run the new container with proper cleanup and restart policy
            docker run -d \
              --name first-app \
              -p 3000:3000 \             # Map host port 3000 â†’ container 3000
              -e NODE_ENV=production \    # Example: Set env variables
              ${{ secrets.DOCKER_USERNAME }}/first-app:1.0

=======
        
            docker stop first-app || true
            docker rm first-app || true
            
            docker rmi -f omarsalhi1/first-app:1.0
     
            docker pull ${{ secrets.DOCKER_USERNAME }}/first-app:1.0
  
            # Run the new container with proper cleanup and restart policy
            docker run -d --name first-app -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/first-app:1.0
  
>>>>>>> 26a0ac5dfd7142342d53427be8e890163f8dd288
            # Verify the container is running
            docker ps -a | grep first-app
            echo "Deployment completed!"
