name: Build, Push, and Deploy Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # build-and-push:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME }}/sahratalk-be:1.0

  deploy:
    runs-on: ubuntu-latest
    # needs: build-and-push # Waits for the build-and-push job to complete

    steps:
      - name: Debug files
        run: |
          pwd
          ls -laR
          find . -name docker-compose-cd.yml || echo "File not found"

      - name: Copy docker-compose-cd.yml to VM
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "docker-compose-cd.yml"  # Or correct path if in subdir
          target: "~/"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            docker stop SahraTalkBE || true
            docker rm SahraTalkBE || true

            docker rmi -f omarsalhi1/sahratalk-be:1.0

            # Create .env file on the server
            cat > .env <<EOF
            NODE_ENV=production
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            SERVER_PORT=3000
            REDIS_HOST=localhost
            REDIS_PORT=6379
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            JWT_ACCESS_SECRET_KEY=${{ secrets.JWT_ACCESS_SECRET_KEY }}
            JWT_REFRESH_SECRET_KEY=${{ secrets.JWT_REFRESH_SECRET_KEY }}
            JWT_ACCESS_TOKEN_TTL=300
            JWT_REFRESH_TOKEN_TTL=86400
            EOF

            docker compose -f docker-compose-cd.yml up -d --remove-orphans --build

            docker ps -a | grep SahraTalkBE

            echo "Deployment completed!"


